# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.define :archlinux_systemd
  config.vm.box = "archlinux/archlinux"
  # Don't replace the original Vagrant's insecure key
  config.ssh.insert_key = false

  # Note: CentOS CI infra specific overrides - you may want to change them
  #       to run the VM locally
  config.vm.provider :libvirt do |libvirt|
    libvirt.driver = ENV.fetch("VAGRANT_DRIVER", "kvm")
    libvirt.memory = ENV.fetch("VAGRANT_MEMORY", "8192")
    libvirt.cpus = ENV.fetch("VAGRANT_CPUS", "8")

    # Pass through /dev/random from the host to the VM
    libvirt.random :model => 'random'

    libvirt.machine_type = "q35"

    # The OVMF_VARS file needs to be created in advance by copying
    # /usr/share/OVMF/OVMF_VARS.fd to /tmp
    # Note: Vagrant can't remove running VMs with an attached NVRAM, so you either
    #       have to shut it off first (vagrant halt) or use `virsh undefine --nvram ...`
    #       before `vagrant destroy -f`
    libvirt.loader = "/usr/share/OVMF/OVMF_CODE.fd"
    libvirt.nvram = "/tmp/OVMF_VARS.fd"
  end

  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.provision "shell", privileged: true, path: __dir__ + "/archlinux_systemd.sh"
end
